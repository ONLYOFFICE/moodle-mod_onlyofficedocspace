/**
 * @module mod_onlyofficedocspace/docspace_users
 * @copyright  2025 Ascensio System SIA <integration@onlyoffice.com>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 **/
define("mod_onlyofficedocspace/docspace_users",["core/str","core/notification","core/templates","mod_onlyofficedocspace/repository","mod_onlyofficedocspace/pagination"],(function(Str,Notification,Templates,Repository,Pagination){let selectedUsers=[],currentPage=1;const selectors_usersTable="table[id='ds-invite-users-table']",selectors_checkers='input[name="users"]',selectors_checkAll='input[id="check-all-users"]',selectors_actionsButtons=".action-buttons",selectors_buttons={invite:"#invite-to-docspace",unlink:"#unlink-docspace-account"},selectors_pagination="#pagination",iconTemplates={},toggle=function(event){const checked=event.target.checked,checkboxes=document.querySelector(selectors_usersTable).querySelectorAll(selectors_checkers);checkboxes.forEach((checkbox=>{checkbox.checked=checked})),selectedUsers=checked?[...checkboxes].map((checkbox=>checkbox.value)):[],toggleActionButtons()},toggleActionButtons=function(){document.querySelectorAll(".action-buttons").forEach((button=>{button.disabled=selectedUsers.length<1}))},handleUnlinkDocspaceUser=async function(event){const unlinkButton=event.target;unlinkButton.disabled=!0,await Notification.saveCancel(Str.getString("warning","onlyofficedocspace"),Str.getString("unlinkwarningmessage","onlyofficedocspace"),Str.getString("unlinkdocspaceaccount","onlyofficedocspace"),(async()=>{const result=await Repository.unlinkDocSpaceUsers(selectedUsers);"success"===result.status&&(clearNotificationsSection(),result.unlinkedcount>0&&(Notification.addNotification({message:await Str.getString("successfuldisable","onlyofficedocspace","".concat(result.unlinkedcount,"/").concat(result.totalcount)),type:"success"}),updateUsersTable()),result.skippedcount>0&&Notification.addNotification({message:await Str.getString("skippeddisable","onlyofficedocspace","".concat(result.skippedcount,"/").concat(result.totalcount)),type:"warning"}))}),null),unlinkButton.disabled=!1},handleInviteToDocspace=async function(event){const inviteButton=event.target;inviteButton.disabled=!0;const result=await Repository.inviteUsersToDocSpace(selectedUsers);result.status&&"success"===result.status&&(clearNotificationsSection(),result.invitedcount>0&&(Notification.addNotification({message:await Str.getString("sentinvitations","onlyofficedocspace","".concat(result.invitedcount,"/").concat(result.totalcount)),type:"success"}),updateUsersTable()),result.skippedcount>0&&Notification.addNotification({message:await Str.getString("skippedinvitations","onlyofficedocspace","".concat(result.skippedcount,"/").concat(result.totalcount)),type:"warning"}),result.failedcount>0&&Notification.addNotification({message:await Str.getString("failedinvitations","onlyofficedocspace","".concat(result.failedcount,"/").concat(result.totalcount)),type:"error"})),inviteButton.disabled=!1},handleSelectUser=function(event){if(event.target.matches(selectors_checkers)){const checkbox=event.target,userValue=checkbox.value;checkbox.checked?selectedUsers.push(userValue):selectedUsers=selectedUsers.filter((user=>user!==userValue)),toggleActionButtons()}},updateUsersTable=async function(){const table=document.querySelector("#ds-invite-users-table"),tbody=table.querySelector("tbody");table.querySelector(selectors_checkAll).checked=!1,selectedUsers=[];const response=await Repository.fetchDocSpaceUsers(currentPage);if(document.querySelector(selectors_actionsButtons).classList.toggle("hidden",!(response.users&&response.users.length>0)),!response.users)return;const fragment=document.createDocumentFragment();response.users.forEach((user=>{fragment.appendChild(generateUsersTableRow(user))})),tbody.innerHTML="",tbody.appendChild(fragment);const totalPages=Math.ceil(response.pagination.total/response.pagination.limit);Pagination.render(selectors_pagination,totalPages,currentPage,(page=>{currentPage=page,updateUsersTable()}))},generateUsersTableRow=function(user){const tr=document.createElement("tr");let td=document.createElement("td");const checkbox=document.createElement("input");return checkbox.type="checkbox",checkbox.name="users",checkbox.value=user.id,td.appendChild(checkbox),tr.appendChild(td),td=document.createElement("td"),td.textContent="".concat(user.firstname," ").concat(user.lastname),tr.appendChild(td),td=document.createElement("td"),td.textContent=user.email,tr.appendChild(td),td=document.createElement("td"),td.textContent=user.role,tr.appendChild(td),td=document.createElement("td"),td.innerHTML=getStatusTemplate(user.status),tr.appendChild(td),td=document.createElement("td"),td.textContent=user.type,tr.appendChild(td),tr},sortUsersTable=function(event){const button=event.target,sortIndex=parseInt(button.dataset.sortIndex),table=document.querySelector(selectors_usersTable),headers=table.querySelectorAll("th button"),tbody=table.querySelector("tbody"),newSort="ascending"===button.getAttribute("aria-sort")?"descending":"ascending";headers.forEach((h=>h.setAttribute("aria-sort","none"))),button.setAttribute("aria-sort",newSort);const rows=Array.from(tbody.querySelectorAll("tr"));rows.sort(((a,b)=>{const cellA=a.children[sortIndex].textContent.trim(),cellB=b.children[sortIndex].textContent.trim();return"ascending"===newSort?cellA.localeCompare(cellB):cellB.localeCompare(cellA)})),rows.forEach((row=>tbody.appendChild(row)))},getStatusTemplate=function(status){switch(status){case"active":return iconTemplates.checkMark;case"exists":return iconTemplates.hourglass;default:return""}},clearNotificationsSection=function(){document.getElementById("user-notifications").innerHTML=""};return{init:async function(){document.addEventListener("click",handleSelectUser);document.querySelector(selectors_checkAll).addEventListener("click",toggle);document.querySelector(selectors_buttons.unlink).addEventListener("click",handleUnlinkDocspaceUser);document.querySelector(selectors_buttons.invite).addEventListener("click",handleInviteToDocspace);document.querySelectorAll(selectors_usersTable+" th button").forEach((button=>button.addEventListener("click",sortUsersTable)));let template=await Templates.renderForPromise("mod_onlyofficedocspace/icons/hourglass",{});iconTemplates.hourglass=template.html,template=await Templates.renderForPromise("mod_onlyofficedocspace/icons/check_mark",{}),iconTemplates.checkMark=template.html,updateUsersTable()}}}));

//# sourceMappingURL=docspace_users.min.js.map