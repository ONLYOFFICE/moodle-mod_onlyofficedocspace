{"version":3,"file":"docspace_users.min.js","sources":["../src/docspace_users.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module mod_onlyofficedocspace/docspace_users\n * @copyright  2025 Ascensio System SIA <integration@onlyoffice.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n **/\n\ndefine([\n    'core/str',\n    'core/notification',\n    'core_form/changechecker',\n    'core/templates',\n    'mod_onlyofficedocspace/repository',\n    'mod_onlyofficedocspace/pagination',\n], function(Str, Notification, ChangeChecker, Templates, Repository, Pagination) {\n        const data = {\n            users: [],\n            selectedUsers: [],\n            pagination: {\n                currentPage: 1,\n                total: 0,\n                limit: 10,\n            },\n        };\n\n        const selectors = {\n            usersTable: \"table[id='ds-invite-users-table']\",\n            checkers: 'input[name=\"users\"]',\n            checkAll: 'input[id=\"check-all-users\"]',\n            actionsButtons: '.action-buttons',\n            buttons: {\n                invite: \"#invite-to-docspace\",\n                unlink: \"#unlink-docspace-account\"\n            },\n            pagination: \"#pagination\",\n        };\n\n        const iconTemplates = {};\n\n        const toggle = function(event) {\n            const checked = event.target.checked;\n            const checkboxes = document.querySelector(selectors.usersTable).querySelectorAll(selectors.checkers);\n            checkboxes.forEach(checkbox => {\n                checkbox.checked = checked;\n            });\n            data.selectedUsers = checked ? [...checkboxes].map(checkbox => checkbox.value) : [];\n            toggleActionButtons();\n        };\n\n        const toggleActionButtons = function() {\n            const buttons = document.querySelectorAll(\".action-buttons button\");\n            buttons.forEach(button => {\n                button.disabled = data.selectedUsers.length < 1;\n            });\n\n            if (data.selectedUsers.length < 1) {\n                ChangeChecker.disableAllChecks();\n            }\n        };\n\n        const handleUnlinkDocspaceUser = async function(event) {\n            const unlinkButton = event.target;\n            unlinkButton.disabled = true;\n\n            await Notification.saveCancel(\n                Str.getString('warning', 'onlyofficedocspace'),\n                Str.getString('unlinkwarningmessage', 'onlyofficedocspace'),\n                Str.getString('unlinkdocspaceaccount', 'onlyofficedocspace'),\n                async() => {\n                    clearNotificationsSection();\n                    try {\n                        const result = await Repository.unlinkDocSpaceUsers(data.selectedUsers);\n\n                        if (result.status === \"success\") {\n                            if (result.unlinkedcount > 0) {\n                                Notification.addNotification({\n                                    message: await Str.getString(\n                                        'successfuldisable',\n                                        'onlyofficedocspace',\n                                        `${result.unlinkedcount}/${result.totalcount}`\n                                    ),\n                                    type: 'success',\n                                });\n                                await updateUsersList();\n                                updateUsersTable();\n                            }\n                            if (result.skippedcount > 0) {\n                                Notification.addNotification({\n                                    message: await Str.getString(\n                                        'skippeddisable',\n                                        'onlyofficedocspace',\n                                        `${result.skippedcount}/${result.totalcount}`\n                                    ),\n                                    type: 'warning',\n                                });\n                            }\n                        }\n                    } catch (error) {\n                        // eslint-disable-next-line no-console\n                        console.log(error);\n                        Notification.addNotification({\n                            message: await Str.getString(\n                                'unexpectederror:unlinkusers',\n                                'onlyofficedocspace',\n                            ),\n                            type: 'error',\n                        });\n                    }\n                },\n                null,\n            );\n\n            unlinkButton.disabled = false;\n        };\n\n        const handleInviteToDocspace = async function(event) {\n            const inviteButton = event.target;\n            inviteButton.disabled = true;\n\n            try {\n                const result = await Repository.inviteUsersToDocSpace(data.selectedUsers);\n\n                if (result.status && result.status === 'success') {\n                    clearNotificationsSection();\n                    if (result.invitedcount > 0) {\n                        Notification.addNotification({\n                            message: await Str.getString(\n                                'sentinvitations',\n                                'onlyofficedocspace',\n                                `${result.invitedcount}/${result.totalcount}`\n                            ),\n                            type: 'success',\n                        });\n                        await updateUsersList();\n                        updateUsersTable();\n                    }\n                    if (result.skippedcount > 0) {\n                        Notification.addNotification({\n                            message: await Str.getString(\n                                'skippedinvitations',\n                                'onlyofficedocspace',\n                                `${result.skippedcount}/${result.totalcount}`\n                            ),\n                            type: 'warning',\n                        });\n                    }\n                    if (result.failedcount > 0) {\n                        Notification.addNotification({\n                            message: await Str.getString(\n                                'failedinvitations',\n                                'onlyofficedocspace',\n                                `${result.failedcount}/${result.totalcount}`\n                            ),\n                            type: 'error',\n                        });\n                    }\n                }\n            } catch (error) {\n                // eslint-disable-next-line no-console\n                console.log(error);\n                Notification.addNotification({\n                    message: await Str.getString(\n                        'unexpectederror:inviteusers',\n                        'onlyofficedocspace',\n                    ),\n                    type: 'error',\n                });\n            }\n\n            inviteButton.disabled = false;\n        };\n\n        const handleSelectUser = function(event) {\n            if (event.target.matches(selectors.checkers)) {\n                const checkbox = event.target;\n                const userValue = checkbox.value;\n                const isChecked = checkbox.checked;\n\n                if (isChecked) {\n                    data.selectedUsers.push(userValue);\n                } else {\n                    data.selectedUsers = data.selectedUsers.filter(user => user !== userValue);\n                }\n\n                toggleActionButtons();\n            }\n        };\n\n        const updateUsersList = async function() {\n            try {\n                const response = await Repository.fetchDocSpaceUsers(data.pagination.currentPage, data.pagination.limit);\n                data.users = response.users;\n                data.pagination.total = response.pagination.total;\n            } catch (error) {\n                // eslint-disable-next-line no-console\n                console.log(error);\n                data.users = [];\n                data.pagination.total = 0;\n            }\n        };\n\n        const updateUsersTable = async function() {\n            const table = document.querySelector(\"#ds-invite-users-table\");\n            const tbody = table.querySelector(\"tbody\");\n            const checkAllInput = table.querySelector(selectors.checkAll);\n            const selectButtons = document.querySelector(selectors.actionsButtons);\n\n            tbody.innerHTML = \"\";\n            checkAllInput.checked = false;\n            data.selectedUsers = [];\n            selectButtons.classList.toggle(\"hidden\", !(data.users && data.users.length > 0));\n\n            if (data.users.length < 1) {\n                const tr = document.createElement(\"tr\");\n                const td = document.createElement(\"td\");\n                td.textContent = await Str.getString(\"emptyuserslist\", \"onlyofficedocspace\");\n                td.colSpan = 6;\n                td.classList.add(\"text-center\");\n                tr.appendChild(td);\n                tbody.appendChild(tr);\n                return;\n            }\n\n            const fragment = document.createDocumentFragment();\n\n            data.users.forEach(user => {\n                fragment.appendChild(generateUsersTableRow(user));\n            });\n\n            tbody.appendChild(fragment);\n\n            const totalPages = Math.ceil(data.pagination.total / data.pagination.limit);\n            Pagination.render(selectors.pagination, totalPages, data.pagination.currentPage, async(page) => {\n                data.pagination.currentPage = page;\n                await updateUsersList();\n                updateUsersTable();\n            });\n        };\n\n        const generateUsersTableRow = function(user) {\n            const tr = document.createElement(\"tr\");\n\n            // Add checkbox column\n            let td = document.createElement(\"td\");\n            const checkbox = document.createElement(\"input\");\n            checkbox.type = \"checkbox\";\n            checkbox.name = \"users\";\n            checkbox.value = user.id;\n            td.appendChild(checkbox);\n            tr.appendChild(td);\n\n            // Add fullname column\n            td = document.createElement(\"td\");\n            td.textContent = `${user.firstname} ${user.lastname}`;\n            tr.appendChild(td);\n\n            // Add email column\n            td = document.createElement(\"td\");\n            td.textContent = user.email;\n            tr.appendChild(td);\n\n            // Add role column\n            td = document.createElement(\"td\");\n            td.textContent = user.role;\n            tr.appendChild(td);\n\n            // Add status column\n            td = document.createElement(\"td\");\n            td.innerHTML = getStatusTemplate(user.status);\n            tr.appendChild(td);\n\n            // Add type column\n            td = document.createElement(\"td\");\n            td.textContent = user.type;\n            tr.appendChild(td);\n\n            return tr;\n        };\n\n        const sortUsersTable = function(event) {\n            const button = event.target;\n            const sortProperty = button.dataset.sortProperty;\n            const table = document.querySelector(selectors.usersTable);\n            const headers = table.querySelectorAll(\"th button\");\n\n            const currentSort = button.getAttribute(\"aria-sort\");\n            const newSort = currentSort === \"ascending\" ? \"descending\": \"ascending\";\n\n            headers.forEach(h => {\n                h.setAttribute(\"aria-sort\", \"none\");\n                h.classList.remove(\"asc\");\n                h.classList.remove(\"desc\");\n            });\n\n            button.setAttribute(\"aria-sort\", newSort);\n            button.classList.add(newSort === \"ascending\" ? \"asc\" : \"desc\");\n\n            data.users.sort((a, b) => {\n                return newSort === \"ascending\"\n                    ? a[sortProperty].localeCompare(b[sortProperty])\n                    : b[sortProperty].localeCompare(a[sortProperty]);\n            });\n\n            updateUsersTable();\n        };\n\n        const getStatusTemplate = function(status) {\n            switch (status) {\n                case \"active\":\n                    return iconTemplates.checkMark;\n                case \"exists\":\n                    return iconTemplates.hourglass;\n                default:\n                    return \"\";\n            }\n        };\n\n        const clearNotificationsSection = function() {\n            const notificationsSection = document.getElementById(\"user-notifications\");\n            notificationsSection.innerHTML = \"\";\n        };\n\n        return {\n            init: async function() {\n                document.addEventListener(\"click\", handleSelectUser);\n                const toggler = document.querySelector(selectors.checkAll);\n                toggler.addEventListener(\"click\", toggle);\n                const unlinkbutton = document.querySelector(selectors.buttons.unlink);\n                unlinkbutton.addEventListener(\"click\", handleUnlinkDocspaceUser);\n                const inviteButton = document.querySelector(selectors.buttons.invite);\n                inviteButton.addEventListener(\"click\", handleInviteToDocspace);\n                const buttons = document.querySelectorAll(selectors.usersTable + \" th button\");\n                buttons.forEach(button => button.addEventListener(\"click\", sortUsersTable));\n\n                let template = await Templates.renderForPromise(\"mod_onlyofficedocspace/icons/hourglass\", {});\n                iconTemplates.hourglass = template.html;\n                template = await Templates.renderForPromise(\"mod_onlyofficedocspace/icons/check_mark\", {});\n                iconTemplates.checkMark = template.html;\n\n                await updateUsersList();\n                updateUsersTable();\n            }\n        };\n    });"],"names":["define","Str","Notification","ChangeChecker","Templates","Repository","Pagination","data","users","selectedUsers","pagination","currentPage","total","limit","selectors","invite","unlink","iconTemplates","toggle","event","checked","target","checkboxes","document","querySelector","querySelectorAll","forEach","checkbox","map","value","toggleActionButtons","button","disabled","length","disableAllChecks","handleUnlinkDocspaceUser","async","unlinkButton","saveCancel","getString","clearNotificationsSection","result","unlinkDocSpaceUsers","status","unlinkedcount","addNotification","message","totalcount","type","updateUsersList","updateUsersTable","skippedcount","error","console","log","handleInviteToDocspace","inviteButton","inviteUsersToDocSpace","invitedcount","failedcount","handleSelectUser","matches","userValue","push","filter","user","response","fetchDocSpaceUsers","table","tbody","checkAllInput","selectButtons","innerHTML","classList","tr","createElement","td","textContent","colSpan","add","appendChild","fragment","createDocumentFragment","generateUsersTableRow","totalPages","Math","ceil","render","page","name","id","firstname","lastname","email","role","getStatusTemplate","sortUsersTable","sortProperty","dataset","headers","newSort","getAttribute","h","setAttribute","remove","sort","a","b","localeCompare","checkMark","hourglass","getElementById","init","addEventListener","template","renderForPromise","html"],"mappings":";;;;;AAqBAA,+CAAO,CACH,WACA,oBACA,0BACA,iBACA,oCACA,sCACD,SAASC,IAAKC,aAAcC,cAAeC,UAAWC,WAAYC,kBACvDC,KAAO,CACTC,MAAO,GACPC,cAAe,GACfC,WAAY,CACRC,YAAa,EACbC,MAAO,EACPC,MAAO,KAITC,qBACU,oCADVA,mBAEQ,sBAFRA,mBAGQ,8BAHRA,yBAIc,kBAJdA,kBAKO,CACLC,OAAQ,sBACRC,OAAQ,4BAPVF,qBASU,cAGVG,cAAgB,GAEhBC,OAAS,SAASC,aACdC,QAAUD,MAAME,OAAOD,QACvBE,WAAaC,SAASC,cAAcV,sBAAsBW,iBAAiBX,oBACjFQ,WAAWI,SAAQC,WACfA,SAASP,QAAUA,WAEvBb,KAAKE,cAAgBW,QAAU,IAAIE,YAAYM,KAAID,UAAYA,SAASE,QAAS,GACjFC,uBAGEA,oBAAsB,WACRP,SAASE,iBAAiB,0BAClCC,SAAQK,SACZA,OAAOC,SAAWzB,KAAKE,cAAcwB,OAAS,KAG9C1B,KAAKE,cAAcwB,OAAS,GAC5B9B,cAAc+B,oBAIhBC,yBAA2BC,eAAejB,aACtCkB,aAAelB,MAAME,OAC3BgB,aAAaL,UAAW,QAElB9B,aAAaoC,WACfrC,IAAIsC,UAAU,UAAW,sBACzBtC,IAAIsC,UAAU,uBAAwB,sBACtCtC,IAAIsC,UAAU,wBAAyB,uBACvCH,UACII,sCAEUC,aAAepC,WAAWqC,oBAAoBnC,KAAKE,eAEnC,YAAlBgC,OAAOE,SACHF,OAAOG,cAAgB,IACvB1C,aAAa2C,gBAAgB,CACzBC,cAAe7C,IAAIsC,UACf,oBACA,+BACGE,OAAOG,0BAAiBH,OAAOM,aAEtCC,KAAM,kBAEJC,kBACNC,oBAEAT,OAAOU,aAAe,GACtBjD,aAAa2C,gBAAgB,CACzBC,cAAe7C,IAAIsC,UACf,iBACA,+BACGE,OAAOU,yBAAgBV,OAAOM,aAErCC,KAAM,aAIpB,MAAOI,OAELC,QAAQC,IAAIF,OACZlD,aAAa2C,gBAAgB,CACzBC,cAAe7C,IAAIsC,UACf,8BACA,sBAEJS,KAAM,aAIlB,MAGJX,aAAaL,UAAW,GAGtBuB,uBAAyBnB,eAAejB,aACpCqC,aAAerC,MAAME,OAC3BmC,aAAaxB,UAAW,YAGdS,aAAepC,WAAWoD,sBAAsBlD,KAAKE,eAEvDgC,OAAOE,QAA4B,YAAlBF,OAAOE,SACxBH,4BACIC,OAAOiB,aAAe,IACtBxD,aAAa2C,gBAAgB,CACzBC,cAAe7C,IAAIsC,UACf,kBACA,+BACGE,OAAOiB,yBAAgBjB,OAAOM,aAErCC,KAAM,kBAEJC,kBACNC,oBAEAT,OAAOU,aAAe,GACtBjD,aAAa2C,gBAAgB,CACzBC,cAAe7C,IAAIsC,UACf,qBACA,+BACGE,OAAOU,yBAAgBV,OAAOM,aAErCC,KAAM,YAGVP,OAAOkB,YAAc,GACrBzD,aAAa2C,gBAAgB,CACzBC,cAAe7C,IAAIsC,UACf,oBACA,+BACGE,OAAOkB,wBAAelB,OAAOM,aAEpCC,KAAM,WAIpB,MAAOI,OAELC,QAAQC,IAAIF,OACZlD,aAAa2C,gBAAgB,CACzBC,cAAe7C,IAAIsC,UACf,8BACA,sBAEJS,KAAM,UAIdQ,aAAaxB,UAAW,GAGtB4B,iBAAmB,SAASzC,UAC1BA,MAAME,OAAOwC,QAAQ/C,oBAAqB,OACpCa,SAAWR,MAAME,OACjByC,UAAYnC,SAASE,MACTF,SAASP,QAGvBb,KAAKE,cAAcsD,KAAKD,WAExBvD,KAAKE,cAAgBF,KAAKE,cAAcuD,QAAOC,MAAQA,OAASH,YAGpEhC,wBAIFmB,gBAAkBb,2BAEV8B,eAAiB7D,WAAW8D,mBAAmB5D,KAAKG,WAAWC,YAAaJ,KAAKG,WAAWG,OAClGN,KAAKC,MAAQ0D,SAAS1D,MACtBD,KAAKG,WAAWE,MAAQsD,SAASxD,WAAWE,MAC9C,MAAOwC,OAELC,QAAQC,IAAIF,OACZ7C,KAAKC,MAAQ,GACbD,KAAKG,WAAWE,MAAQ,IAI1BsC,iBAAmBd,uBACfgC,MAAQ7C,SAASC,cAAc,0BAC/B6C,MAAQD,MAAM5C,cAAc,SAC5B8C,cAAgBF,MAAM5C,cAAcV,oBACpCyD,cAAgBhD,SAASC,cAAcV,6BAE7CuD,MAAMG,UAAY,GAClBF,cAAclD,SAAU,EACxBb,KAAKE,cAAgB,GACrB8D,cAAcE,UAAUvD,OAAO,WAAYX,KAAKC,OAASD,KAAKC,MAAMyB,OAAS,IAEzE1B,KAAKC,MAAMyB,OAAS,EAAG,OACjByC,GAAKnD,SAASoD,cAAc,MAC5BC,GAAKrD,SAASoD,cAAc,aAClCC,GAAGC,kBAAoB5E,IAAIsC,UAAU,iBAAkB,sBACvDqC,GAAGE,QAAU,EACbF,GAAGH,UAAUM,IAAI,eACjBL,GAAGM,YAAYJ,SACfP,MAAMW,YAAYN,UAIhBO,SAAW1D,SAAS2D,yBAE1B3E,KAAKC,MAAMkB,SAAQuC,OACfgB,SAASD,YAAYG,sBAAsBlB,UAG/CI,MAAMW,YAAYC,gBAEZG,WAAaC,KAAKC,KAAK/E,KAAKG,WAAWE,MAAQL,KAAKG,WAAWG,OACrEP,WAAWiF,OAAOzE,qBAAsBsE,WAAY7E,KAAKG,WAAWC,aAAayB,MAAAA,OAC7E7B,KAAKG,WAAWC,YAAc6E,WACxBvC,kBACNC,uBAIFiC,sBAAwB,SAASlB,YAC7BS,GAAKnD,SAASoD,cAAc,UAG9BC,GAAKrD,SAASoD,cAAc,YAC1BhD,SAAWJ,SAASoD,cAAc,gBACxChD,SAASqB,KAAO,WAChBrB,SAAS8D,KAAO,QAChB9D,SAASE,MAAQoC,KAAKyB,GACtBd,GAAGI,YAAYrD,UACf+C,GAAGM,YAAYJ,IAGfA,GAAKrD,SAASoD,cAAc,MAC5BC,GAAGC,sBAAiBZ,KAAK0B,sBAAa1B,KAAK2B,UAC3ClB,GAAGM,YAAYJ,IAGfA,GAAKrD,SAASoD,cAAc,MAC5BC,GAAGC,YAAcZ,KAAK4B,MACtBnB,GAAGM,YAAYJ,IAGfA,GAAKrD,SAASoD,cAAc,MAC5BC,GAAGC,YAAcZ,KAAK6B,KACtBpB,GAAGM,YAAYJ,IAGfA,GAAKrD,SAASoD,cAAc,MAC5BC,GAAGJ,UAAYuB,kBAAkB9B,KAAKtB,QACtC+B,GAAGM,YAAYJ,IAGfA,GAAKrD,SAASoD,cAAc,MAC5BC,GAAGC,YAAcZ,KAAKjB,KACtB0B,GAAGM,YAAYJ,IAERF,IAGLsB,eAAiB,SAAS7E,aACtBY,OAASZ,MAAME,OACf4E,aAAelE,OAAOmE,QAAQD,aAE9BE,QADQ5E,SAASC,cAAcV,sBACfW,iBAAiB,aAGjC2E,QAA0B,cADZrE,OAAOsE,aAAa,aACM,aAAc,YAE5DF,QAAQzE,SAAQ4E,IACZA,EAAEC,aAAa,YAAa,QAC5BD,EAAE7B,UAAU+B,OAAO,OACnBF,EAAE7B,UAAU+B,OAAO,WAGvBzE,OAAOwE,aAAa,YAAaH,SACjCrE,OAAO0C,UAAUM,IAAgB,cAAZqB,QAA0B,MAAQ,QAEvD7F,KAAKC,MAAMiG,MAAK,CAACC,EAAGC,IACG,cAAZP,QACDM,EAAET,cAAcW,cAAcD,EAAEV,eAChCU,EAAEV,cAAcW,cAAcF,EAAET,iBAG1C/C,oBAGE6C,kBAAoB,SAASpD,eACvBA,YACC,gBACM1B,cAAc4F,cACpB,gBACM5F,cAAc6F,wBAEd,KAIbtE,0BAA4B,WACDjB,SAASwF,eAAe,sBAChCvC,UAAY,UAG9B,CACHwC,KAAM5E,iBACFb,SAAS0F,iBAAiB,QAASrD,kBACnBrC,SAASC,cAAcV,oBAC/BmG,iBAAiB,QAAS/F,QACbK,SAASC,cAAcV,kBAAkBE,QACjDiG,iBAAiB,QAAS9E,0BAClBZ,SAASC,cAAcV,kBAAkBC,QACjDkG,iBAAiB,QAAS1D,wBACvBhC,SAASE,iBAAiBX,qBAAuB,cACzDY,SAAQK,QAAUA,OAAOkF,iBAAiB,QAASjB,sBAEvDkB,eAAiB9G,UAAU+G,iBAAiB,yCAA0C,IAC1FlG,cAAc6F,UAAYI,SAASE,KACnCF,eAAiB9G,UAAU+G,iBAAiB,0CAA2C,IACvFlG,cAAc4F,UAAYK,SAASE,WAE7BnE,kBACNC"}