{"version":3,"file":"docspace_users.min.js","sources":["../src/docspace_users.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module mod_onlyofficedocspace/docspace_users\n * @copyright  2025 Ascensio System SIA <integration@onlyoffice.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n **/\n\ndefine([\n    'core/str',\n    'core/notification',\n    'core/templates',\n    'mod_onlyofficedocspace/repository',\n    'mod_onlyofficedocspace/pagination',\n], function(Str, Notification, Templates, Repository, Pagination) {\n        let selectedUsers = [];\n        let currentPage = 1;\n\n        const selectors = {\n            usersTable: \"table[id='ds-invite-users-table']\",\n            checkers: 'input[name=\"users\"]',\n            checkAll: 'input[id=\"check-all-users\"]',\n            buttons: {\n                invite: \"#invite-to-docspace\",\n                unlink: \"#unlink-docspace-account\"\n            },\n            pagination: \"#pagination\",\n        };\n\n        const iconTemplates = {};\n\n        const toggle = function(event) {\n            const checked = event.target.checked;\n            const checkboxes = document.querySelector(selectors.usersTable).querySelectorAll(selectors.checkers);\n            checkboxes.forEach(checkbox => {\n                checkbox.checked = checked;\n            });\n            selectedUsers = checked ? [...checkboxes].map(checkbox => checkbox.value) : [];\n            toggleActionButtons();\n        };\n\n        const toggleActionButtons = function() {\n            const buttons = document.querySelectorAll(\".action-buttons\");\n            buttons.forEach(button => {\n                button.disabled = selectedUsers.length < 1;\n            });\n        };\n\n        const handleUnlinkDocspaceUser = async function(event) {\n            const unlinkButton = event.target;\n            unlinkButton.disabled = true;\n\n            await Notification.saveCancel(\n                Str.getString('warning', 'onlyofficedocspace'),\n                Str.getString('unlinkwarningmessage', 'onlyofficedocspace'),\n                Str.getString('unlinkdocspaceaccount', 'onlyofficedocspace'),\n                async() => {\n                    const result = await Repository.unlinkDocSpaceUsers(selectedUsers);\n\n                    if (result.status === \"success\") {\n                        clearNotificationsSection();\n                        if (result.unlinkedcount > 0) {\n                            Notification.addNotification({\n                                message: await Str.getString(\n                                    'successfuldisable',\n                                    'onlyofficedocspace',\n                                    `${result.unlinkedcount}/${result.totalcount}`\n                                ),\n                                type: 'success',\n                            });\n                            updateUsersTable();\n                        }\n                        if (result.skippedcount > 0) {\n                            Notification.addNotification({\n                                message: await Str.getString(\n                                    'skippeddisable',\n                                    'onlyofficedocspace',\n                                    `${result.skippedcount}/${result.totalcount}`\n                                ),\n                                type: 'warning',\n                            });\n                        }\n                    }\n                },\n                null,\n            );\n\n            unlinkButton.disabled = false;\n        };\n\n        const handleInviteToDocspace = async function(event) {\n            const inviteButton = event.target;\n            inviteButton.disabled = true;\n\n            const result = await Repository.inviteUsersToDocSpace(selectedUsers);\n\n            if (result.status && result.status === 'success') {\n                clearNotificationsSection();\n                if (result.invitedcount > 0) {\n                    Notification.addNotification({\n                        message: await Str.getString(\n                            'sentinvitations',\n                            'onlyofficedocspace',\n                            `${result.invitedcount}/${result.totalcount}`\n                        ),\n                        type: 'success',\n                    });\n                    updateUsersTable();\n                }\n                if (result.skippedcount > 0) {\n                    Notification.addNotification({\n                        message: await Str.getString(\n                            'skippedinvitations',\n                            'onlyofficedocspace',\n                            `${result.skippedcount}/${result.totalcount}`\n                        ),\n                        type: 'warning',\n                    });\n                }\n                if (result.failedcount > 0) {\n                    Notification.addNotification({\n                        message: await Str.getString(\n                            'failedinvitations',\n                            'onlyofficedocspace',\n                            `${result.failedcount}/${result.totalcount}`\n                        ),\n                        type: 'error',\n                    });\n                }\n            }\n\n            inviteButton.disabled = false;\n        };\n\n        const handleSelectUser = function(event) {\n            if (event.target.matches(selectors.checkers)) {\n                const checkbox = event.target;\n                const userValue = checkbox.value;\n                const isChecked = checkbox.checked;\n\n                if (isChecked) {\n                    selectedUsers.push(userValue);\n                } else {\n                    selectedUsers = selectedUsers.filter(user => user !== userValue);\n                }\n\n                toggleActionButtons();\n            }\n        };\n\n        const updateUsersTable = async function() {\n            const response = await Repository.fetchDocSpaceUsers(currentPage);\n\n            if (!response.users) {\n                return;\n            }\n\n            selectedUsers = [];\n\n            const table = document.querySelector(\"#ds-invite-users-table\");\n            const tbody = table.querySelector(\"tbody\");\n            const checkAllInput = table.querySelector(selectors.checkAll);\n            const fragment = document.createDocumentFragment();\n\n            response.users.forEach(user => {\n                fragment.appendChild(generateUsersTableRow(user));\n            });\n\n            checkAllInput.checked = false;\n            tbody.innerHTML = \"\";\n            tbody.appendChild(fragment);\n\n            const totalPages = Math.ceil(response.pagination.total / response.pagination.limit);\n            Pagination.render(selectors.pagination, totalPages, currentPage, (page) => {\n                currentPage = page;\n                updateUsersTable();\n            });\n        };\n\n        const generateUsersTableRow = function(user) {\n            const tr = document.createElement(\"tr\");\n\n            // Add checkbox column\n            let td = document.createElement(\"td\");\n            const checkbox = document.createElement(\"input\");\n            checkbox.type = \"checkbox\";\n            checkbox.name = \"users\";\n            checkbox.value = user.id;\n            td.appendChild(checkbox);\n            tr.appendChild(td);\n\n            // Add fullname column\n            td = document.createElement(\"td\");\n            td.textContent = `${user.firstname} ${user.lastname}`;\n            tr.appendChild(td);\n\n            // Add email column\n            td = document.createElement(\"td\");\n            td.textContent = user.email;\n            tr.appendChild(td);\n\n            // Add role column\n            td = document.createElement(\"td\");\n            td.textContent = user.role;\n            tr.appendChild(td);\n\n            // Add status column\n            td = document.createElement(\"td\");\n            td.innerHTML = getStatusTemplate(user.status);\n            tr.appendChild(td);\n\n            // Add type column\n            td = document.createElement(\"td\");\n            td.textContent = user.type;\n            tr.appendChild(td);\n\n            return tr;\n        };\n\n        const sortUsersTable = function(event) {\n            const button = event.target;\n            const sortIndex = parseInt(button.dataset.sortIndex);\n            const table = document.querySelector(selectors.usersTable);\n            const headers = table.querySelectorAll(\"th button\");\n            const tbody = table.querySelector(\"tbody\");\n\n            const currentSort = button.getAttribute(\"aria-sort\");\n            const newSort = currentSort === \"ascending\" ? \"descending\": \"ascending\";\n\n            headers.forEach(h => h.setAttribute(\"aria-sort\", \"none\"));\n            button.setAttribute(\"aria-sort\", newSort);\n\n            const rows = Array.from(tbody.querySelectorAll(\"tr\"));\n            rows.sort((a, b) => {\n                const cellA = a.children[sortIndex].textContent.trim();\n                const cellB = b.children[sortIndex].textContent.trim();\n\n                return newSort === \"ascending\"\n                    ? cellA.localeCompare(cellB)\n                    : cellB.localeCompare(cellA);\n            });\n\n            rows.forEach(row => tbody.appendChild(row));\n        };\n\n        const getStatusTemplate = function(status) {\n            switch (status) {\n                case \"active\":\n                    return iconTemplates.checkMark;\n                case \"present\":\n                    return iconTemplates.hourglass;\n                default:\n                    return \"\";\n            }\n        };\n\n        const clearNotificationsSection = function() {\n            const notificationsSection = document.getElementById(\"user-notifications\");\n            notificationsSection.innerHTML = \"\";\n        };\n\n        return {\n            init: async function() {\n                document.addEventListener(\"click\", handleSelectUser);\n                const toggler = document.querySelector(selectors.checkAll);\n                toggler.addEventListener(\"click\", toggle);\n                const unlinkbutton = document.querySelector(selectors.buttons.unlink);\n                unlinkbutton.addEventListener(\"click\", handleUnlinkDocspaceUser);\n                const inviteButton = document.querySelector(selectors.buttons.invite);\n                inviteButton.addEventListener(\"click\", handleInviteToDocspace);\n                const buttons = document.querySelectorAll(selectors.usersTable + \" th button\");\n                buttons.forEach(button => button.addEventListener(\"click\", sortUsersTable));\n\n                await Templates.renderForPromise(\"mod_onlyofficedocspace/icons/hourglass\", {})\n                    .then(({html}) => {\n                        iconTemplates.hourglass = html;\n                        return;\n                    });\n                await Templates.renderForPromise(\"mod_onlyofficedocspace/icons/check_mark\", {})\n                    .then(({html}) => {\n                        iconTemplates.checkMark = html;\n                        return;\n                    });\n\n                updateUsersTable();\n            }\n        };\n    });"],"names":["define","Str","Notification","Templates","Repository","Pagination","selectedUsers","currentPage","selectors","invite","unlink","iconTemplates","toggle","event","checked","target","checkboxes","document","querySelector","querySelectorAll","forEach","checkbox","map","value","toggleActionButtons","button","disabled","length","handleUnlinkDocspaceUser","async","unlinkButton","saveCancel","getString","result","unlinkDocSpaceUsers","status","clearNotificationsSection","unlinkedcount","addNotification","message","totalcount","type","updateUsersTable","skippedcount","handleInviteToDocspace","inviteButton","inviteUsersToDocSpace","invitedcount","failedcount","handleSelectUser","matches","userValue","push","filter","user","response","fetchDocSpaceUsers","users","table","tbody","checkAllInput","fragment","createDocumentFragment","appendChild","generateUsersTableRow","innerHTML","totalPages","Math","ceil","pagination","total","limit","render","page","tr","createElement","td","name","id","textContent","firstname","lastname","email","role","getStatusTemplate","sortUsersTable","sortIndex","parseInt","dataset","headers","newSort","getAttribute","h","setAttribute","rows","Array","from","sort","a","b","cellA","children","trim","cellB","localeCompare","row","checkMark","hourglass","getElementById","init","addEventListener","renderForPromise","then","_ref","html","_ref2"],"mappings":";;;;;AAqBAA,+CAAO,CACH,WACA,oBACA,iBACA,oCACA,sCACD,SAASC,IAAKC,aAAcC,UAAWC,WAAYC,gBAC1CC,cAAgB,GAChBC,YAAc,QAEZC,qBACU,oCADVA,mBAEQ,sBAFRA,mBAGQ,8BAHRA,kBAIO,CACLC,OAAQ,sBACRC,OAAQ,4BANVF,qBAQU,cAGVG,cAAgB,GAEhBC,OAAS,SAASC,aACdC,QAAUD,MAAME,OAAOD,QACvBE,WAAaC,SAASC,cAAcV,sBAAsBW,iBAAiBX,oBACjFQ,WAAWI,SAAQC,WACfA,SAASP,QAAUA,WAEvBR,cAAgBQ,QAAU,IAAIE,YAAYM,KAAID,UAAYA,SAASE,QAAS,GAC5EC,uBAGEA,oBAAsB,WACRP,SAASE,iBAAiB,mBAClCC,SAAQK,SACZA,OAAOC,SAAWpB,cAAcqB,OAAS,MAI3CC,yBAA2BC,eAAehB,aACtCiB,aAAejB,MAAME,OAC3Be,aAAaJ,UAAW,QAElBxB,aAAa6B,WACf9B,IAAI+B,UAAU,UAAW,sBACzB/B,IAAI+B,UAAU,uBAAwB,sBACtC/B,IAAI+B,UAAU,wBAAyB,uBACvCH,gBACUI,aAAe7B,WAAW8B,oBAAoB5B,eAE9B,YAAlB2B,OAAOE,SACPC,4BACIH,OAAOI,cAAgB,IACvBnC,aAAaoC,gBAAgB,CACzBC,cAAetC,IAAI+B,UACf,oBACA,+BACGC,OAAOI,0BAAiBJ,OAAOO,aAEtCC,KAAM,YAEVC,oBAEAT,OAAOU,aAAe,GACtBzC,aAAaoC,gBAAgB,CACzBC,cAAetC,IAAI+B,UACf,iBACA,+BACGC,OAAOU,yBAAgBV,OAAOO,aAErCC,KAAM,eAKtB,MAGJX,aAAaJ,UAAW,GAGtBkB,uBAAyBf,eAAehB,aACpCgC,aAAehC,MAAME,OAC3B8B,aAAanB,UAAW,QAElBO,aAAe7B,WAAW0C,sBAAsBxC,eAElD2B,OAAOE,QAA4B,YAAlBF,OAAOE,SACxBC,4BACIH,OAAOc,aAAe,IACtB7C,aAAaoC,gBAAgB,CACzBC,cAAetC,IAAI+B,UACf,kBACA,+BACGC,OAAOc,yBAAgBd,OAAOO,aAErCC,KAAM,YAEVC,oBAEAT,OAAOU,aAAe,GACtBzC,aAAaoC,gBAAgB,CACzBC,cAAetC,IAAI+B,UACf,qBACA,+BACGC,OAAOU,yBAAgBV,OAAOO,aAErCC,KAAM,YAGVR,OAAOe,YAAc,GACrB9C,aAAaoC,gBAAgB,CACzBC,cAAetC,IAAI+B,UACf,oBACA,+BACGC,OAAOe,wBAAef,OAAOO,aAEpCC,KAAM,WAKlBI,aAAanB,UAAW,GAGtBuB,iBAAmB,SAASpC,UAC1BA,MAAME,OAAOmC,QAAQ1C,oBAAqB,OACpCa,SAAWR,MAAME,OACjBoC,UAAY9B,SAASE,MACTF,SAASP,QAGvBR,cAAc8C,KAAKD,WAEnB7C,cAAgBA,cAAc+C,QAAOC,MAAQA,OAASH,YAG1D3B,wBAIFkB,iBAAmBb,uBACf0B,eAAiBnD,WAAWoD,mBAAmBjD,iBAEhDgD,SAASE,aAIdnD,cAAgB,SAEVoD,MAAQzC,SAASC,cAAc,0BAC/ByC,MAAQD,MAAMxC,cAAc,SAC5B0C,cAAgBF,MAAMxC,cAAcV,oBACpCqD,SAAW5C,SAAS6C,yBAE1BP,SAASE,MAAMrC,SAAQkC,OACnBO,SAASE,YAAYC,sBAAsBV,UAG/CM,cAAc9C,SAAU,EACxB6C,MAAMM,UAAY,GAClBN,MAAMI,YAAYF,gBAEZK,WAAaC,KAAKC,KAAKb,SAASc,WAAWC,MAAQf,SAASc,WAAWE,OAC7ElE,WAAWmE,OAAOhE,qBAAsB0D,WAAY3D,aAAckE,OAC9DlE,YAAckE,KACd/B,uBAIFsB,sBAAwB,SAASV,YAC7BoB,GAAKzD,SAAS0D,cAAc,UAG9BC,GAAK3D,SAAS0D,cAAc,YAC1BtD,SAAWJ,SAAS0D,cAAc,gBACxCtD,SAASoB,KAAO,WAChBpB,SAASwD,KAAO,QAChBxD,SAASE,MAAQ+B,KAAKwB,GACtBF,GAAGb,YAAY1C,UACfqD,GAAGX,YAAYa,IAGfA,GAAK3D,SAAS0D,cAAc,MAC5BC,GAAGG,sBAAiBzB,KAAK0B,sBAAa1B,KAAK2B,UAC3CP,GAAGX,YAAYa,IAGfA,GAAK3D,SAAS0D,cAAc,MAC5BC,GAAGG,YAAczB,KAAK4B,MACtBR,GAAGX,YAAYa,IAGfA,GAAK3D,SAAS0D,cAAc,MAC5BC,GAAGG,YAAczB,KAAK6B,KACtBT,GAAGX,YAAYa,IAGfA,GAAK3D,SAAS0D,cAAc,MAC5BC,GAAGX,UAAYmB,kBAAkB9B,KAAKnB,QACtCuC,GAAGX,YAAYa,IAGfA,GAAK3D,SAAS0D,cAAc,MAC5BC,GAAGG,YAAczB,KAAKb,KACtBiC,GAAGX,YAAYa,IAERF,IAGLW,eAAiB,SAASxE,aACtBY,OAASZ,MAAME,OACfuE,UAAYC,SAAS9D,OAAO+D,QAAQF,WACpC5B,MAAQzC,SAASC,cAAcV,sBAC/BiF,QAAU/B,MAAMvC,iBAAiB,aACjCwC,MAAQD,MAAMxC,cAAc,SAG5BwE,QAA0B,cADZjE,OAAOkE,aAAa,aACM,aAAc,YAE5DF,QAAQrE,SAAQwE,GAAKA,EAAEC,aAAa,YAAa,UACjDpE,OAAOoE,aAAa,YAAaH,eAE3BI,KAAOC,MAAMC,KAAKrC,MAAMxC,iBAAiB,OAC/C2E,KAAKG,MAAK,CAACC,EAAGC,WACJC,MAAQF,EAAEG,SAASf,WAAWP,YAAYuB,OAC1CC,MAAQJ,EAAEE,SAASf,WAAWP,YAAYuB,aAE7B,cAAZZ,QACDU,MAAMI,cAAcD,OACpBA,MAAMC,cAAcJ,UAG9BN,KAAK1E,SAAQqF,KAAO9C,MAAMI,YAAY0C,QAGpCrB,kBAAoB,SAASjD,eACvBA,YACC,gBACMxB,cAAc+F,cACpB,iBACM/F,cAAcgG,wBAEd,KAIbvE,0BAA4B,WACDnB,SAAS2F,eAAe,sBAChC3C,UAAY,UAG9B,CACH4C,KAAMhF,iBACFZ,SAAS6F,iBAAiB,QAAS7D,kBACnBhC,SAASC,cAAcV,oBAC/BsG,iBAAiB,QAASlG,QACbK,SAASC,cAAcV,kBAAkBE,QACjDoG,iBAAiB,QAASlF,0BAClBX,SAASC,cAAcV,kBAAkBC,QACjDqG,iBAAiB,QAASlE,wBACvB3B,SAASE,iBAAiBX,qBAAuB,cACzDY,SAAQK,QAAUA,OAAOqF,iBAAiB,QAASzB,wBAErDlF,UAAU4G,iBAAiB,yCAA0C,IACtEC,MAAKC,WAACC,KAACA,WACJvG,cAAcgG,UAAYO,cAG5B/G,UAAU4G,iBAAiB,0CAA2C,IACvEC,MAAKG,YAACD,KAACA,YACJvG,cAAc+F,UAAYQ,QAIlCxE"}