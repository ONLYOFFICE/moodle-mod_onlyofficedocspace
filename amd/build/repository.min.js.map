{"version":3,"file":"repository.min.js","sources":["../src/repository.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Repository to perform WS calls for mod_onlyofficedocspace.\n *\n * @module mod_onlyofficedocspace/repository\n * @copyright  2025 Ascensio System SIA <integration@onlyoffice.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {call as fetchMany} from 'core/ajax';\n\n/**\n * Invite users to OnlyOffice DocSpace\n *\n * @param   {object} users Users list\n * @returns {Promise}\n */\nexport const inviteUsers = (users) => {\n    const args = {\n        users\n    };\n\n    return fetchMany([{methodname: 'mod_onlyofficedocspace_invite_users', args}])[0];\n};\n\n/**\n * Update DocSpace user password\n *\n * @param   {string} email DocSpace admin email\n * @param   {string} password DocSpace admin password hash\n * @returns {Promise}\n */\nexport const updateUserPassword = (\n    email,\n    password,\n) => {\n    const args = {\n        email,\n        password,\n    };\n\n    return fetchMany([{methodname: 'mod_onlyofficedocspace_update_user_password', args}])[0];\n};\n\n/**\n * Check DocSpace connectivity\n *\n * @param   {string} url DocSpace url\n * @returns {Promise}\n */\nexport const checkDocSpaceConnectivity = (url) => {\n    const args = {\n        url,\n    };\n\n    return fetchMany([{methodname: 'mod_onlyofficedocspace_check_docspace_connectivity', args}])[0];\n};\n\n/**\n * Connect DocSpace\n *\n * @param   {string} url DocSpace url\n * @param   {string} apikey DocSpace API Key\n * @returns {Promise}\n */\nexport const connectDocSpace = (url, apikey) => {\n    const args = {\n        url,\n        apikey,\n    };\n\n    return fetchMany([{methodname: 'mod_onlyofficedocspace_connect_docspace', args}])[0];\n};\n\n/**\n * Disconnect DocSpace\n *\n * @returns {Promise}\n */\nexport const disconnectDocSpace = () => {\n    const args = {};\n\n    return fetchMany([{methodname: 'mod_onlyofficedocspace_disconnect_docspace', args}])[0];\n};\n"],"names":["users","args","methodname","email","password","url","apikey"],"mappings":"0TA+B4BA,cAClBC,KAAO,CACTD,MAAAA,cAGG,cAAU,CAAC,CAACE,WAAY,sCAAuCD,KAAAA,QAAQ,gCAUhD,CAC9BE,MACAC,kBAEMH,KAAO,CACTE,MAAAA,MACAC,SAAAA,iBAGG,cAAU,CAAC,CAACF,WAAY,8CAA+CD,KAAAA,QAAQ,uCAShDI,YAChCJ,KAAO,CACTI,IAAAA,YAGG,cAAU,CAAC,CAACH,WAAY,qDAAsDD,KAAAA,QAAQ,6BAUlE,CAACI,IAAKC,gBAC3BL,KAAO,CACTI,IAAAA,IACAC,OAAAA,eAGG,cAAU,CAAC,CAACJ,WAAY,0CAA2CD,KAAAA,QAAQ,gCAQpD,KAGvB,cAAU,CAAC,CAACC,WAAY,6CAA8CD,KAFhE,MAEwE"}