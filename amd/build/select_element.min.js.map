{"version":3,"file":"select_element.min.js","sources":["../src/select_element.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module mod_onlyofficedocspace/select_element\n * @copyright  2024 Ascensio System SIA <integration@onlyoffice.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n **/\n/* eslint-disable no-undef */\ndefine(\n    [\n        'jquery',\n        'core/modal_events',\n        'mod_onlyofficedocspace/docspace_integration_sdk',\n        'mod_onlyofficedocspace/select_modal',\n        'mod_onlyofficedocspace/login_modal',\n        'core/str'\n    ],\n    function($, ModalEvents, DocspaceIntegrationSDK, DocSpaceSelectModal, DocSpaceLogInModal, Str) {\n        const frames = {\n            system: \"ds-system-frame\",\n            login: \"ds-login-frame\",\n            select: \"ds-select-frame\",\n        };\n\n        let logged = false;\n        let user;\n        let docspaceUrl;\n\n        const showLoginForm = function() {\n            const loginForm = document.getElementById(\"ds-login-form\");\n            loginForm.classList.remove(\"d-none\");\n        };\n\n        const hideLoginForm = function() {\n            const loginForm = document.getElementById(\"ds-login-form\");\n            loginForm.classList.add(\"d-none\");\n        };\n\n        const showSelectButtons = function() {\n            const selectForm = document.getElementById(\"ds-select-buttons\");\n            selectForm.classList.remove(\"d-none\");\n        };\n\n        const hideSelectButtons = function() {\n            const selectForm = document.getElementById(\"ds-select-buttons\");\n            selectForm.classList.add(\"d-none\");\n        };\n\n        const showSelectedItem = function() {\n            const loginForm = document.getElementById(\"ds-selected-item\");\n            loginForm.classList.remove(\"d-none\");\n        };\n\n        const hideSelectedItem = function() {\n            const loginForm = document.getElementById(\"ds-selected-item\");\n            loginForm.classList.add(\"d-none\");\n        };\n\n        const selectItem = async function(id, type, requestToken, name, icon) {\n            document.getElementsByName(\"docspaceitemid\")[0].value = id;\n            document.getElementsByName(\"docspaceitemtype\")[0].value = type;\n            document.getElementsByName(\"docspacerequesttoken\")[0].value = requestToken;\n            document.getElementsByName(\"docspaceitemname\")[0].value = name;\n            document.getElementsByName(\"docspaceitemicon\")[0].value = icon;\n\n            const selectedItemType = document.getElementById(\"ds-selected-item-type\");\n            selectedItemType\n                .querySelector(\"p\")\n                .textContent = await Str.getString(\"selecteditemtype:\" + type, 'mod_onlyofficedocspace');\n            const selectedItemInfo = document.getElementById(\"ds-selected-item-info\");\n            selectedItemInfo.querySelector(\"img\").src = icon;\n            selectedItemInfo.querySelector(\"p\").textContent = name;\n        };\n\n        const setState = function(state = '') {\n            if (state === 'login') {\n                showLoginForm();\n                hideSelectButtons();\n                hideSelectedItem();\n            } else if (state === 'selectors') {\n                showSelectButtons();\n                hideLoginForm();\n                hideSelectedItem();\n            } else if (state === 'item') {\n                showSelectedItem();\n                hideLoginForm();\n                hideSelectButtons();\n            } else {\n                hideLoginForm();\n                hideSelectedItem();\n                hideSelectButtons();\n            }\n        };\n\n        const displayLoginModal = async function() {\n            await DocSpaceLogInModal.create({\n                templateContext: {\n                    email: user.email,\n                    url: docspaceUrl,\n                },\n                removeOnClose: true\n            })\n                // eslint-disable-next-line promise/always-return\n                .then((modal) => {\n                    modal.getRoot().on(ModalEvents.hidden, async() => {\n                        await DocSpace.SDK.frames[frames.login].destroyFrame();\n                    });\n                    modal.getRoot().on(ModalEvents.cancel, () => {\n                        modal.destroy();\n                    });\n                    modal.modal[0].classList.add(\"modal-dialog-centered\");\n                    modal.modal[0].style = \"width: 440px;\";\n                    modal.show();\n                    const docSpace = DocSpace.SDK.initSystem({\n                        frameId: frames.login,\n                        width: 0,\n                        height: 0,\n                    });\n                    document.querySelector('button[data-action=\"ds-login-submit\"]')\n                        .addEventListener(\"click\", async function() {\n                            const password = document.getElementById(\"ds-login-password\").value;\n\n                            const hashSettings = await docSpace.getHashSettings();\n                            const passwordHash = await docSpace.createHash(password.trim(), hashSettings);\n\n                            // eslint-disable-next-line promise/catch-or-return, promise/no-nesting\n                            docSpace.login(user.email, passwordHash)\n                                .then(async function(response) {\n                                    // eslint-disable-next-line promise/always-return\n                                    if (response.status && response.status !== 200) {\n                                        document.getElementById(\"ds-login-error\").style.display = \"block\";\n                                    } else {\n                                        const updatePasswordUrl = M.cfg.wwwroot +\n                                            '/mod/onlyofficedocspace/api/updateuserpassword.php';\n                                        let data = {\n                                            email: user.email,\n                                            password: passwordHash,\n                                        };\n                                        $.ajax({\n                                            type: 'POST',\n                                            url: updatePasswordUrl,\n                                            dataType: 'json',\n                                            data: data,\n                                        });\n\n                                        modal.destroy();\n                                        setState('selectors');\n                                    }\n                                });\n                        });\n                    document.querySelector('button[data-action=\"ds-login-cancel\"]')\n                        .addEventListener(\"click\", function() {\n                            modal.destroy();\n                        });\n                });\n        };\n\n        const displaySelectorModal = async function(event) {\n            const button = event.target;\n            const selectorType = button.dataset.selectorType;\n            const titleText = selectorType === \"room\"\n                ? await Str.getString('selectroom', 'mod_onlyofficedocspace')\n                : await Str.getString('selectfile', 'mod_onlyofficedocspace');\n\n            const modal = await DocSpaceSelectModal.create({\n                templateContext: {\n                    titleText: titleText\n                },\n                removeOnClose: true\n            });\n            modal.body[0].classList.add(\"p-0\", \"py-2\");\n            modal.modal[0].classList.add(\"modal-dialog-centered\");\n            modal.modal[0].querySelector(\".modal-content\").style = \"width:480px;border-radius: 0\";\n            modal.getRoot().on(ModalEvents.hidden, async() => {\n                await DocSpace.SDK.frames[frames.select].destroyFrame();\n            });\n            modal.show();\n\n            const config = {\n                frameId: frames.select,\n                width: \"100%\",\n                height: \"538px\",\n                showSelectorCancel: true,\n                roomType: 6,\n                events: {\n                    onSelectCallback: async function(event) {\n                        const data = selectorType === \"room\" ? event[0] : event;\n                        const name = selectorType === \"room\" ? data.label : data.title + data.fileExst;\n                        const requestToken = data.requestTokens[0].requestToken;\n                        selectItem(data.id, selectorType, requestToken, name, data.icon);\n                        setState('item');\n                        modal.destroy();\n                    },\n                    onCloseCallback: function() {\n                        clearSelectedItem();\n                        modal.destroy();\n                    }\n                },\n            };\n\n            if (selectorType === \"room\") {\n                config.mode = \"room-selector\";\n            } else if (selectorType === \"file\") {\n                config.mode = \"file-selector\";\n                config.rootPath = \"/rooms/share\";\n                config.selectorType = \"roomsOnly\";\n            }\n\n            DocSpace.SDK.initFrame(config);\n        };\n\n        const clearSelectedItem = function() {\n            selectItem('', '', '', '', '');\n            setState();\n            if (logged) {\n                setState('selectors');\n            } else {\n                loginToDocSpace();\n            }\n        };\n\n        const loginToDocSpace = async function() {\n            DocSpace.SDK.initSystem({\n                frameId: frames.system,\n                width: \"100%\",\n                height: \"100%\",\n                events: {\n                    onAppReady: async function() {\n                        const docSpace = DocSpace.SDK.frames[frames.system];\n                        const docSpaceUser = await docSpace.getUserInfo();\n\n                        if (docSpaceUser && docSpaceUser.email === user.email) {\n                            logged = true;\n                            setState('selectors');\n                        } else {\n                            if (docSpaceUser) {\n                                await docSpace.logout();\n                            }\n                            logged = false;\n\n                            if (user.hash) {\n                                await docSpace.login(user.email, user.hash)\n                                    .then(function(response) {\n                                        // eslint-disable-next-line promise/always-return\n                                        if (response.status && response.status !== 200) {\n                                            setState('login');\n                                        } else {\n                                            logged = true;\n                                            setState('selectors');\n                                        }\n                                    });\n                            } else {\n                                setState('login');\n                            }\n                        }\n\n                        await docSpace.destroyFrame();\n                    }\n                }\n            });\n        };\n\n        return {\n            init: async function(url, currentUser, activity) {\n                user = currentUser;\n                docspaceUrl = url;\n\n                await DocspaceIntegrationSDK.initScript(\"oodsp-api-js\", docspaceUrl);\n\n                if (activity) {\n                    selectItem(\n                        activity.docspaceitemid,\n                        activity.docspaceitemtype,\n                        activity.docspacerequesttoken,\n                        activity.docspaceitemname,\n                        activity.docspaceitemicon\n                    );\n                    setState('item');\n                } else {\n                    loginToDocSpace();\n                }\n\n                const selectRoomButton = document.getElementById(\"ds-select-room\");\n                const selectFileButton = document.getElementById(\"ds-select-file\");\n                const removeSelectedItemButton = document.getElementById(\"remove-selected-item\");\n                const loginButton = document.getElementById(\"ds-login-button\");\n\n                selectRoomButton.addEventListener(\"click\", displaySelectorModal);\n                selectFileButton.addEventListener(\"click\", displaySelectorModal);\n                removeSelectedItemButton.addEventListener(\"click\", clearSelectedItem);\n                loginButton.addEventListener(\"click\", displayLoginModal);\n            }\n        };\n    });\n/* eslint-enable no-undef */"],"names":["define","$","ModalEvents","DocspaceIntegrationSDK","DocSpaceSelectModal","DocSpaceLogInModal","Str","frames","user","docspaceUrl","logged","showLoginForm","document","getElementById","classList","remove","hideLoginForm","add","showSelectButtons","hideSelectButtons","showSelectedItem","hideSelectedItem","selectItem","async","id","type","requestToken","name","icon","getElementsByName","value","querySelector","textContent","getString","selectedItemInfo","src","setState","state","displayLoginModal","create","templateContext","email","url","removeOnClose","then","modal","getRoot","on","hidden","DocSpace","SDK","destroyFrame","cancel","destroy","style","show","docSpace","initSystem","frameId","width","height","addEventListener","password","hashSettings","getHashSettings","passwordHash","createHash","trim","login","response","status","display","updatePasswordUrl","M","cfg","wwwroot","data","ajax","dataType","displaySelectorModal","event","selectorType","target","dataset","titleText","body","config","showSelectorCancel","roomType","events","onSelectCallback","label","title","fileExst","requestTokens","onCloseCallback","clearSelectedItem","mode","rootPath","initFrame","loginToDocSpace","onAppReady","docSpaceUser","getUserInfo","logout","hash","init","currentUser","activity","initScript","docspaceitemid","docspaceitemtype","docspacerequesttoken","docspaceitemname","docspaceitemicon","selectRoomButton","selectFileButton","removeSelectedItemButton","loginButton"],"mappings":"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"}