{"version":3,"file":"select_element.min.js","sources":["../src/select_element.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module mod_onlyofficedocspace/select_element\n * @copyright  2025 Ascensio System SIA <integration@onlyoffice.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n **/\n/* eslint-disable no-undef */\ndefine(\n    [\n        'core/modal_events',\n        'core/str',\n        'mod_onlyofficedocspace/docspace_integration_sdk',\n        'mod_onlyofficedocspace/select_modal',\n        'mod_onlyofficedocspace/login_modal',\n        'mod_onlyofficedocspace/repository'\n    ],\n    function(ModalEvents, Str, DocspaceIntegrationSDK, DocSpaceSelectModal, DocSpaceLogInModal, Repository) {\n        const STEPS = {\n            LOADING: 'loading',\n            LOGIN: 'login',\n            SELECT_ITEM: 'select_item',\n            DOCSPACE_ITEM: 'docspace_item',\n            ERROR: 'error',\n        };\n\n        const selectors = {\n            frames: {\n                system: \"ds-system-frame\",\n                login: \"ds-login-frame\",\n                select: \"ds-select-frame\",\n            },\n            modal: {\n                ids: {\n                    email: 'ds-login-email',\n                    password: 'ds-login-password',\n                    submit: 'ds-login-submit',\n                    cancel: 'ds-login-cancel',\n                }\n            },\n            select: {\n                ids: {\n                    containers: {\n                        login: 'ds-login-container',\n                        item: 'ds-item-container',\n                        select: 'ds-select-container',\n                        error: 'ds-error',\n                    },\n                    buttons: {\n                        login: 'ds-show-login-modal',\n                        selectRoom: 'ds-select-room',\n                        selectFile: 'ds-select-file',\n                        remove: 'ds-item-remove',\n                    }\n                }\n            }\n        };\n\n        const data = {\n            url: '',\n            user: null,\n            item: null,\n        };\n\n        let state = {step: STEPS.LOADING};\n\n        const setState = function(newState) {\n            state = {...state, ...newState};\n            render();\n        };\n\n        const render = function() {\n            document.getElementById(selectors.select.ids.containers.item)\n                .classList.toggle('d-none', state.step !== STEPS.DOCSPACE_ITEM);\n            document.getElementById(selectors.select.ids.containers.login)\n                .classList.toggle('d-none', state.step !== STEPS.LOGIN);\n            document.getElementById(selectors.select.ids.containers.error)\n                .classList.toggle('d-none', state.step !== STEPS.ERROR);\n            document.getElementById(selectors.select.ids.containers.select)\n                .classList.toggle('d-none', state.step !== STEPS.SELECT_ITEM);\n\n            if (state.step === STEPS.LOADING) {\n                initDocSpace();\n            }\n        };\n\n        const initDocSpace = async function() {\n            await DocspaceIntegrationSDK.initScript(\"oodsp-api-js\", data.url)\n                .then(async() => {\n                    DocSpace.SDK.initSystem({\n                        frameId: selectors.frames.system,\n                        src: data.url,\n                        events: {\n                            async onAppReady() {\n                                if (data.user && data.user.email && data.user.passwordHash) {\n                                    await authenticateWithDocSpace(\n                                        data.user.email,\n                                        data.user.passwordHash,\n                                        () => {\n                                            setState({step: STEPS.SELECT_ITEM});\n                                        },\n                                        () => {\n                                            setState({step: STEPS.LOGIN});\n                                        }\n                                    );\n                                } else {\n                                    setState({step: STEPS.LOGIN});\n                                }\n                            },\n                            onAppError() {\n                                setState({step: STEPS.ERROR});\n                            }\n                        }\n                    });\n                    return;\n                }).catch(() => {\n                    setState({step: STEPS.ERROR});\n                });\n        };\n\n        const showLoginModal = async function() {\n            await DocSpaceLogInModal.create({\n                templateContext: {\n                    email: data.user ? data.user.email : '',\n                    url: data.url,\n                },\n                removeOnClose: true\n            })\n            .then((modal) => {\n                modal.getRoot().on(ModalEvents.cancel, () => {\n                    modal.destroy();\n                });\n                modal.modal[0].classList.add(\"modal-dialog-centered\");\n                modal.modal[0].style = \"width: 440px;\";\n                modal.show();\n                document.getElementById(selectors.modal.ids.submit)\n                    .addEventListener(\"click\", async function(event) {\n                        const submitButton = event.target;\n                        submitButton.disabled = true;\n\n                        const email = document.getElementById(selectors.modal.ids.email).value.trim();\n                        const password = document.getElementById(selectors.modal.ids.password).value.trim();\n\n                        const docspace = DocSpace.SDK.frames[selectors.frames.system];\n                        const hashSettings = await docspace.getHashSettings();\n                        const passwordHash = await docspace.createHash(password.trim(), hashSettings);\n\n                        await authenticateWithDocSpace(\n                            email,\n                            passwordHash,\n                            async() => {\n                                // eslint-disable-next-line promise/no-nesting\n                                await Repository.updateUserPassword(email, passwordHash)\n                                    .catch((error) => {\n                                        // eslint-disable-next-line no-console\n                                        console.log(error);\n                                    });\n\n                                modal.destroy();\n                                setState({step: STEPS.SELECT_ITEM});\n                            },\n                            () => {\n                                document.getElementById(\"ds-login-error\").style.display = \"block\";\n                            },\n                        );\n                        submitButton.disabled = false;\n                    });\n                document.getElementById(selectors.modal.ids.cancel)\n                    .addEventListener(\"click\", function() {\n                        modal.destroy();\n                    });\n                return;\n            });\n        };\n\n        const showSelectModal = async function(event) {\n            const button = event.target;\n            const selectorType = button.dataset.selectorType;\n            const titleText = selectorType === \"room\"\n                ? await Str.getString('selectroom', 'mod_onlyofficedocspace')\n                : await Str.getString('selectfile', 'mod_onlyofficedocspace');\n\n            const modal = await DocSpaceSelectModal.create({\n                templateContext: {\n                    titleText: titleText\n                },\n                removeOnClose: true\n            });\n            modal.body[0].classList.add(\"p-0\", \"py-2\");\n            modal.modal[0].classList.add(\"modal-dialog-centered\");\n            modal.modal[0].querySelector(\".modal-content\").style = \"width:480px;border-radius: 0\";\n            modal.getRoot().on(ModalEvents.hidden, async() => {\n                await DocSpace.SDK.frames[selectors.frames.select].destroyFrame();\n            });\n            modal.show();\n\n            const config = {\n                frameId: selectors.frames.select,\n                src: data.url,\n                width: \"100%\",\n                height: \"538px\",\n                showSelectorCancel: true,\n                roomType: 6,\n                events: {\n                    onSelectCallback: async function(event) {\n                        const itemInfo = selectorType === \"room\" ? event[0] : event;\n                        const name = selectorType === \"room\" ? itemInfo.label : itemInfo.title + itemInfo.fileExst;\n                        const icon = URL.parse(itemInfo.icon) ?? new URL(itemInfo.icon, data.url);\n                                const requestToken = itemInfo.requestTokens[0].requestToken;\n                                selectItem(itemInfo.id, selectorType, requestToken, name, icon.href);\n                                setState({step: STEPS.DOCSPACE_ITEM});\n                                modal.destroy();\n                            },\n                    onCloseCallback: function() {\n                        modal.destroy();\n                    }\n                },\n            };\n\n            if (selectorType === \"room\") {\n                config.mode = \"room-selector\";\n            } else if (selectorType === \"file\") {\n                config.mode = \"file-selector\";\n                config.rootPath = \"/rooms/share\";\n                config.selectorType = \"roomsOnly\";\n            }\n\n            DocSpace.SDK.initFrame(config);\n        };\n\n        const authenticateWithDocSpace = async function(email, passwordHash, onSuccess = null, onFail = null) {\n            const docspace = DocSpace.SDK.frames[selectors.frames.system];\n            const docspaceUser = await docspace.getUserInfo();\n\n            if (docspaceUser && docspaceUser.email !== email) {\n                await docspace.logout();\n            }\n\n            await docspace.login(email, passwordHash)\n                .then(result => {\n                    const name = result.name ?? '';\n                    if (name.toLowerCase() === 'error') {\n                        if (onFail) {\n                            onFail();\n                        }\n                    } else {\n                        if (onSuccess) {\n                            onSuccess();\n                        }\n                    }\n                    return;\n                }).catch(() => {\n                    if (onFail) {\n                        onFail();\n                    }\n                });\n        };\n\n        const selectItem = async function(id, type, requestToken, name, icon) {\n            document.getElementsByName(\"docspaceitemid\")[0].value = id;\n            document.getElementsByName(\"docspaceitemtype\")[0].value = type;\n            document.getElementsByName(\"docspacerequesttoken\")[0].value = requestToken;\n            document.getElementsByName(\"docspaceitemname\")[0].value = name;\n            document.getElementsByName(\"docspaceitemicon\")[0].value = icon;\n\n            const selectedItemType = document.getElementById(\"ds-item-type\");\n            selectedItemType\n                .querySelector(\"p\")\n                .textContent = await Str.getString(\"selecteditemtype:\" + type, 'mod_onlyofficedocspace');\n            const selectedItemInfo = document.getElementById(\"ds-item-info\");\n            selectedItemInfo.querySelector(\"img\").src = icon;\n            selectedItemInfo.querySelector(\"p\").textContent = name;\n        };\n\n        const removeItem = async function() {\n            selectItem('', '', '', '', '');\n            setState({step: STEPS.SELECT_ITEM});\n        };\n\n        return {\n            init: async function(url, user, item) {\n                data.url = url;\n                data.user = user;\n                data.item = item;\n\n                // Bind event handlers.\n                document.getElementById(selectors.select.ids.buttons.login).addEventListener('click', showLoginModal);\n                document.getElementById(selectors.select.ids.buttons.selectRoom).addEventListener('click', showSelectModal);\n                // document.getElementById(selectors.select.ids.buttons.selectFile).addEventListener('click', showSelectModal);\n                document.getElementById(selectors.select.ids.buttons.remove).addEventListener('click', removeItem);\n\n                setState({step: STEPS.LOADING});\n            }\n        };\n    });\n/* eslint-enable no-undef*/"],"names":["define","ModalEvents","Str","DocspaceIntegrationSDK","DocSpaceSelectModal","DocSpaceLogInModal","Repository","STEPS","selectors","system","login","select","ids","email","password","submit","cancel","containers","item","error","buttons","selectRoom","selectFile","remove","data","url","user","state","step","setState","newState","render","document","getElementById","classList","toggle","initDocSpace","async","initScript","then","DocSpace","SDK","initSystem","frameId","src","events","passwordHash","authenticateWithDocSpace","onAppError","catch","showLoginModal","create","templateContext","removeOnClose","modal","getRoot","on","destroy","add","style","show","addEventListener","event","submitButton","target","disabled","value","trim","docspace","frames","hashSettings","getHashSettings","createHash","updateUserPassword","console","log","display","showSelectModal","selectorType","dataset","titleText","getString","body","querySelector","hidden","destroyFrame","config","width","height","showSelectorCancel","roomType","onSelectCallback","itemInfo","name","label","title","fileExst","icon","URL","parse","requestToken","requestTokens","selectItem","id","href","onCloseCallback","mode","rootPath","initFrame","onSuccess","onFail","docspaceUser","getUserInfo","logout","result","toLowerCase","type","getElementsByName","textContent","selectedItemInfo","removeItem","init"],"mappings":"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"}