{"version":3,"file":"admin_settings.min.js","sources":["../src/admin_settings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_onlyofficedocspace/admin_settings\n * @copyright  2025 Ascensio System SIA <integration@onlyoffice.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n **/\ndefine([\n    'core_form/changechecker',\n    'core/notification',\n    'core/str',\n    'mod_onlyofficedocspace/repository',\n], function(ChangeChecker, Notification, Str, Repository) {\n\n    const selectors = {\n        notifications: '#user-notifications',\n        fieldRows: {\n            url: '#admin-docspace_server_url',\n            apiKey: '#admin-docspace_api_key',\n        },\n        icons: {\n            rightArrow: \".right-arrow\",\n            spinner: \".spinner-border\",\n            checkMark: \".ds-check-icon\",\n        },\n        buttons: {\n            checkUrl: \"#check-docspace-url-btn\",\n            connect: \"#connect-docspace-btn\",\n            change: \"#change-docspace-btn\",\n            disconnect: \"#disconnect-docspace-btn\",\n        },\n        inputs: {\n            url: '#id_s_onlyofficedocspace_docspace_server_url',\n            apiKey: '#id_s_onlyofficedocspace_docspace_api_key',\n        },\n        errors: {\n            url: '#id_s_onlyofficedocspace_docspace_server_url-error',\n            apiKey: '#id_s_onlyofficedocspace_docspace_api_key-error',\n        }\n    };\n\n    const STEPS = {\n        CONNECTED: 'connected',\n        CHECK_URL: 'check_url',\n        CHECK_API_KEY: 'check_api_key',\n    };\n\n    const state = {\n        step: STEPS.CONNECTED,\n        isUrlValid: false,\n    };\n\n    const setState = function(newState) {\n        render({...state, ...newState});\n    };\n\n    const render = async function(state) {\n        const isCheckingUrl = Boolean(state.isCheckingUrl);\n        const isConnecting = Boolean(state.isConnecting);\n\n        document.querySelector(selectors.notifications).innerHTML = '';\n\n        document.querySelector(selectors.fieldRows.url).classList.toggle('disabled', state.step === STEPS.CONNECTED);\n        document.querySelector(selectors.fieldRows.apiKey).classList.toggle('disabled', state.step !== STEPS.CHECK_API_KEY);\n\n        document.querySelector(selectors.buttons.checkUrl).classList.toggle('hidden', state.step === STEPS.CONNECTED);\n        document.querySelector(selectors.buttons.connect).classList.toggle('hidden', state.step === STEPS.CONNECTED);\n        document.querySelector(selectors.buttons.change).classList.toggle('hidden', state.step !== STEPS.CONNECTED);\n        document.querySelector(selectors.buttons.disconnect).classList.toggle('hidden', state.step !== STEPS.CONNECTED);\n\n        document.querySelector(selectors.icons.spinner).classList.toggle('hidden', !isCheckingUrl);\n        document.querySelector(selectors.icons.rightArrow).classList.toggle('hidden', isCheckingUrl);\n        document.querySelector(selectors.inputs.url).classList\n            .toggle('pr-5', state.isUrlValid);\n        document.querySelector(selectors.icons.checkMark).classList\n            .toggle('hidden', !state.isUrlValid);\n\n        document.querySelector(selectors.buttons.connect).disabled = state.step !== STEPS.CHECK_API_KEY || isConnecting;\n        document.querySelector(selectors.buttons.checkUrl).disabled = isCheckingUrl;\n\n        document.querySelector(selectors.errors.url).classList.toggle('hidden', !(state.errors && state.errors.url));\n        document.querySelector(selectors.errors.apiKey).classList.toggle('hidden', !(state.errors && state.errors.apiKey));\n\n        document.querySelectorAll('.ds-create-key-link').forEach(link => {\n            const url = document.querySelector(selectors.inputs.url).value;\n            link.href = state.isUrlValid ? url : '#';\n        });\n\n        if (state.success) {\n            await Notification.addNotification({\n                message: state.success,\n                type: 'success',\n            });\n        }\n\n        if (state.errors) {\n            const errorMessages = [];\n            if (state.errors.url) {\n                document.querySelector(selectors.errors.url).textContent = state.errors.url;\n                errorMessages.push(state.errors.url);\n            }\n\n            if (state.errors.apiKey) {\n                document.querySelector(selectors.errors.apiKey).textContent = state.errors.apiKey;\n                errorMessages.push(state.errors.apiKey);\n            }\n\n            if (state.errors.general) {\n                errorMessages.push(state.errors.general);\n            }\n\n            errorMessages.forEach(async(error) => {\n                await Notification.addNotification({\n                    message: error,\n                    type: 'error'\n                });\n            });\n        }\n    };\n\n    const handleCheckUrl = async function() {\n        state.step = STEPS.CHECK_URL;\n        state.isUrlValid = false;\n        setState({isCheckingUrl: true});\n\n        const url = document.querySelector(selectors.inputs.url).value.trim();\n\n        // Check if the URL is empty.\n        if (url.length === 0) {\n            setState({errors: {\n                url: await Str.getString('validationerror:emptyurl', 'onlyofficedocspace')\n            }});\n            return;\n        }\n\n        // Check if the URL is valid.\n        try {\n            new URL(url);\n        } catch (TypeError) {\n            setState({errors: {\n                url: await Str.getString('validationerror:invalidurl', 'onlyofficedocspace')\n            }});\n            return;\n        }\n\n        const result = await Repository.checkDocSpaceConnectivity(url);\n\n        if (result.status && result.status === 'success') {\n            state.isUrlValid = true;\n            state.step = STEPS.CHECK_API_KEY;\n            setState({});\n            return;\n        }\n\n        if (result.errors) {\n            setState({errors: {url: result.errors[0]}});\n        }\n    };\n\n    const handleConnect = async function(event) {\n        const connectButton = event.target;\n        connectButton.disabled = true;\n\n        const url = document.querySelector(selectors.inputs.url).value.trim();\n        const apiKey = document.querySelector(selectors.inputs.apiKey).value.trim();\n\n        if (apiKey.length === 0) {\n            setState({errors: {\n                apiKey: await Str.getString('validationerror:emptyapikey', 'onlyofficedocspace')\n            }});\n            return;\n        }\n\n        const result = await Repository.connectDocSpace(url, apiKey);\n\n        if (result.status && result.status === 'success') {\n            state.step = STEPS.CONNECTED;\n            state.isUrlValid = true;\n            setState({success: await Str.getString('successfulconnection', 'onlyofficedocspace')});\n        } else if (result.errors) {\n            setState({errors: {apiKey: result.errors[0]}});\n        }\n\n        ChangeChecker.disableAllChecks();\n        connectButton.disabled = false;\n    };\n\n    const handleChangeDocSpace = async function() {\n        await Notification.saveCancel(\n            Str.getString('warning', 'onlyofficedocspace'),\n            Str.getString('confirmchange_desc', 'onlyofficedocspace'),\n            Str.getString('change', 'onlyofficedocspace'),\n            async() => {\n                state.step = STEPS.CHECK_URL;\n                state.isUrlValid = false;\n                setState({});\n            },\n            null,\n        );\n    };\n\n    const handleDisconnectDocSpace = async function() {\n        await Notification.saveCancel(\n            Str.getString('warning', 'onlyofficedocspace'),\n            Str.getString('confirmdisconnect_desc', 'onlyofficedocspace'),\n            Str.getString('disconnect', 'onlyofficedocspace'),\n            async() => {\n                const result = await Repository.disconnectDocSpace();\n\n                if (result.status && result.status === 'success') {\n                    ChangeChecker.disableAllChecks();\n                    window.location.reload();\n                    return;\n                }\n\n                if (result.errors) {\n                    setState({errors: {general: result.errors}});\n                }\n            },\n            null,\n        );\n    };\n\n    const resetStepToCheckUrl = function() {\n        state.step = STEPS.CHECK_URL;\n        state.isUrlValid = false;\n        setState({});\n    };\n\n    const updateClearButton = function(event) {\n        const input = event.target;\n        const wrapper = input.closest(\".ds-input-wrapper\");\n        const clearButton = wrapper.querySelector('.ds-clear-btn');\n        const focusedAndNonEmpty = input.value && document.activeElement === input;\n        input.classList.toggle('pr-5', focusedAndNonEmpty);\n        clearButton.classList.toggle('hidden', !focusedAndNonEmpty);\n    };\n\n    const resetInputValue = function(event) {\n        if (event.target.closest(\".ds-clear-btn\")) {\n            const wrapper = event.target.closest(\".ds-input-wrapper\");\n            const input = wrapper.querySelector(\"input\");\n            input.value = \"\";\n            input.dispatchEvent(new Event(\"input\", {bubbles: true}));\n            input.focus();\n        }\n    };\n\n    return {\n        init: async function(connected) {\n            // Bind event handlers.\n            document.querySelector(selectors.buttons.checkUrl).addEventListener('click', handleCheckUrl);\n            document.querySelector(selectors.buttons.connect).addEventListener('click', handleConnect);\n            document.querySelector(selectors.buttons.change).addEventListener('click', handleChangeDocSpace);\n            document.querySelector(selectors.buttons.disconnect).addEventListener('click', handleDisconnectDocSpace);\n\n            document.querySelector(selectors.inputs.url).addEventListener('input', resetStepToCheckUrl);\n            document.querySelector(selectors.inputs.url).addEventListener('focus', resetStepToCheckUrl);\n            document.querySelector(selectors.inputs.url).addEventListener('input', updateClearButton);\n            document.querySelector(selectors.inputs.url).addEventListener('focus', updateClearButton);\n            document.querySelector(selectors.inputs.url).addEventListener('blur', e => {\n                setTimeout(() => {\n                    updateClearButton(e);\n                }, 200);\n            });\n\n            document.querySelector(selectors.inputs.apiKey).addEventListener('input', updateClearButton);\n            document.querySelector(selectors.inputs.apiKey).addEventListener('focus', updateClearButton);\n            document.querySelector(selectors.inputs.apiKey).addEventListener('blur', e => {\n                setTimeout(() => {\n                    updateClearButton(e);\n                }, 200);\n            });\n\n            document.addEventListener(\"click\", resetInputValue);\n\n            // Set initial state.\n            state.step = connected ? STEPS.CONNECTED : STEPS.CHECK_URL;\n            state.isUrlValid = connected;\n            setState({});\n        }\n    };\n});"],"names":["define","ChangeChecker","Notification","Str","Repository","selectors","url","apiKey","rightArrow","spinner","checkMark","checkUrl","connect","change","disconnect","STEPS","state","step","isUrlValid","setState","newState","render","async","isCheckingUrl","Boolean","isConnecting","document","querySelector","innerHTML","classList","toggle","disabled","errors","querySelectorAll","forEach","link","value","href","success","addNotification","message","type","errorMessages","textContent","push","general","error","handleCheckUrl","trim","length","getString","URL","TypeError","result","checkDocSpaceConnectivity","status","handleConnect","event","connectButton","target","connectDocSpace","disableAllChecks","handleChangeDocSpace","saveCancel","handleDisconnectDocSpace","disconnectDocSpace","window","location","reload","resetStepToCheckUrl","updateClearButton","input","clearButton","closest","focusedAndNonEmpty","activeElement","resetInputValue","dispatchEvent","Event","bubbles","focus","init","connected","addEventListener","e","setTimeout"],"mappings":"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"}