{"version":3,"file":"admin_settings.min.js","sources":["../src/admin_settings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module mod_onlyofficedocspace/admin_settings\n * @copyright  2024 Ascensio System SIA <integration@onlyoffice.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n **/\n/* eslint-disable no-undef, no-console */\ndefine(\n    [\n        'jquery',\n        'mod_onlyofficedocspace/docspace_integration_sdk',\n        'mod_onlyofficedocspace/password_generator',\n        'mod_onlyofficedocspace/notification',\n        'core/str'\n    ],\n    function ($, DocspaceIntegrationSdk, PasswordGenerator, Notification, Str) {\n        const systemFrameId = \"oodsp-system-frame\";\n        const scriptId = 'oodsp-api-js';\n        let submitButton;\n\n        const updateSettings = async function () {\n            const url = document.getElementById(\"id_s_onlyofficedocspace_docspace_server_url\").value;\n            const email = document.getElementById(\"id_s_onlyofficedocspace_docspace_login\").value;\n            const password = document.getElementsByName(\"s_onlyofficedocspace_docspace_password\")[0].value;\n            const hashSettings = await DocSpace.SDK.frames[systemFrameId].getHashSettings();\n            const passwordHash = await DocSpace\n                .SDK\n                .frames[systemFrameId]\n                .createHash(password.trim(), hashSettings);\n            const randomPasswordHash = await DocSpace\n                .SDK\n                .frames[systemFrameId]\n                .createHash(PasswordGenerator.generate(), hashSettings);\n            const updateSettingsUrl = M.cfg.wwwroot +\n                '/mod/onlyofficedocspace/api/updateadminsettings.php';\n            let data = {\n                url: url,\n                email: email,\n                password: passwordHash,\n                randomPassword: randomPasswordHash\n            };\n            await $.ajax({\n                headers: {\n                    Accept: \"application/json\",\n                },\n                type: 'POST',\n                url: updateSettingsUrl,\n                dataType: 'json',\n                data: data,\n            }).done(async function (response) {\n                if (response.status === 201) {\n                    window.location.reload();\n                }\n            }).fail(function (jqXHR) {\n                submitButton.removeAttribute(\"disabled\");\n                const status = jqXHR.status;\n                if (status === 500 || status === 422) {\n                    const error = jqXHR.responseJSON.error;\n                    Notification.display(error, 'error');\n                }\n            });\n            submitButton.removeAttribute(\"disabled\");\n        };\n\n        return {\n            init: async function (urls) {\n                const settingsForm = document.getElementById(\"adminsettings\");\n                const warningMessage = await Str.getString(\"adminsettings:urlwarning\", \"onlyofficedocspace\");\n\n                if (settingsForm) {\n                    submitButton = settingsForm.querySelector(\"[type='submit']\");\n                    const systemFrameContainer = document.createElement(\"div\");\n                    systemFrameContainer.classList.add(\"d-none\");\n                    const systemFrame = document.createElement(\"div\");\n                    systemFrame.id = systemFrameId;\n                    systemFrameContainer.appendChild(systemFrame);\n                    settingsForm.appendChild(systemFrameContainer);\n\n                    settingsForm.addEventListener(\"submit\", async function (event) {\n                        event.preventDefault();\n                        submitButton.setAttribute(\"disabled\", \"\");\n                        const url = document.getElementById(\"id_s_onlyofficedocspace_docspace_server_url\").value;\n\n                        if (url !== urls.current && url !== urls.default && confirm(warningMessage) !== true) {\n                            submitButton.removeAttribute(\"disabled\");\n                            return;\n                        }\n\n                        let script = document.getElementById(scriptId);\n\n                        if (script && script.src !== url + \"/\" + DocspaceIntegrationSdk.apiUrl) {\n                            if (typeof DocSpace !== \"undefined\" && DocSpace !== null) {\n                                await DocSpace.SDK.frames[systemFrameId].destroyFrame();\n                            }\n                            script.remove();\n                            script = null;\n                            window.DocSpace = null;\n                        }\n\n                        if (!script) {\n                            await DocspaceIntegrationSdk.initScript(scriptId, url)\n                                .catch(async () => {\n                                    Notification.display(await Str.getString('docspaceunreachable', 'onlyofficedocspace'), 'error');\n                                });\n                        }\n\n                        if (typeof DocSpace === \"undefined\" || DocSpace === null) {\n                            submitButton.removeAttribute(\"disabled\");\n                            return;\n                        }\n\n                        if (DocSpace.SDK.frames[systemFrameId]) {\n                            updateSettings();\n                        } else {\n                            DocSpace.SDK.initSystem(\n                                {\n                                    frameId: systemFrameId,\n                                    events: {\n                                        \"onAppReady\": async function () {\n                                            updateSettings();\n                                        },\n                                        \"onAppError\": function () {\n                                            console.log(\"Something went wrong.\");\n                                        }\n                                    }\n                                }\n                            );\n                        }\n                    });\n                }\n            }\n        };\n    });\n/* eslint-enable no-undef, no-console */"],"names":["define","$","DocspaceIntegrationSdk","PasswordGenerator","Notification","Str","systemFrameId","submitButton","updateSettings","async","url","document","getElementById","value","email","password","getElementsByName","hashSettings","DocSpace","SDK","frames","getHashSettings","passwordHash","createHash","trim","randomPasswordHash","generate","updateSettingsUrl","M","cfg","wwwroot","data","randomPassword","ajax","headers","Accept","type","dataType","done","response","status","window","location","reload","fail","jqXHR","removeAttribute","error","responseJSON","display","init","urls","settingsForm","warningMessage","getString","querySelector","systemFrameContainer","createElement","classList","add","systemFrame","id","appendChild","addEventListener","event","preventDefault","setAttribute","current","default","confirm","script","src","apiUrl","destroyFrame","remove","initScript","catch","initSystem","frameId","events","console","log"],"mappings":";;;;;AAqBAA,+CACI,CACI,SACA,kDACA,4CACA,sCACA,aAEJ,SAAUC,EAAGC,uBAAwBC,kBAAmBC,aAAcC,WAC5DC,cAAgB,yBAElBC,mBAEEC,eAAiBC,uBACbC,IAAMC,SAASC,eAAe,+CAA+CC,MAC7EC,MAAQH,SAASC,eAAe,0CAA0CC,MAC1EE,SAAWJ,SAASK,kBAAkB,0CAA0C,GAAGH,MACnFI,mBAAqBC,SAASC,IAAIC,OAAOd,eAAee,kBACxDC,mBAAqBJ,SACtBC,IACAC,OAAOd,eACPiB,WAAWR,SAASS,OAAQP,cAC3BQ,yBAA2BP,SAC5BC,IACAC,OAAOd,eACPiB,WAAWpB,kBAAkBuB,WAAYT,cACxCU,kBAAoBC,EAAEC,IAAIC,QAC5B,0DACAC,KAAO,CACPrB,IAAKA,IACLI,MAAOA,MACPC,SAAUO,aACVU,eAAgBP,0BAEdxB,EAAEgC,KAAK,CACTC,QAAS,CACLC,OAAQ,oBAEZC,KAAM,OACN1B,IAAKiB,kBACLU,SAAU,OACVN,KAAMA,OACPO,MAAK7B,eAAgB8B,UACI,MAApBA,SAASC,QACTC,OAAOC,SAASC,YAErBC,MAAK,SAAUC,OACdtC,aAAauC,gBAAgB,kBACvBN,OAASK,MAAML,UACN,MAAXA,QAA6B,MAAXA,OAAgB,OAC5BO,MAAQF,MAAMG,aAAaD,MACjC3C,aAAa6C,QAAQF,MAAO,aAGpCxC,aAAauC,gBAAgB,mBAG1B,CACHI,KAAMzC,eAAgB0C,YACZC,aAAezC,SAASC,eAAe,iBACvCyC,qBAAuBhD,IAAIiD,UAAU,2BAA4B,yBAEnEF,aAAc,CACd7C,aAAe6C,aAAaG,cAAc,yBACpCC,qBAAuB7C,SAAS8C,cAAc,OACpDD,qBAAqBE,UAAUC,IAAI,gBAC7BC,YAAcjD,SAAS8C,cAAc,OAC3CG,YAAYC,GAAKvD,cACjBkD,qBAAqBM,YAAYF,aACjCR,aAAaU,YAAYN,sBAEzBJ,aAAaW,iBAAiB,UAAUtD,eAAgBuD,OACpDA,MAAMC,iBACN1D,aAAa2D,aAAa,WAAY,UAChCxD,IAAMC,SAASC,eAAe,+CAA+CC,SAE/EH,MAAQyC,KAAKgB,SAAWzD,MAAQyC,KAAKiB,UAAuC,IAA5BC,QAAQhB,4BACxD9C,aAAauC,gBAAgB,gBAI7BwB,OAAS3D,SAASC,eAvErB,gBAyEG0D,QAAUA,OAAOC,MAAQ7D,IAAM,IAAMR,uBAAuBsE,SACpC,oBAAbtD,UAAyC,OAAbA,gBAC7BA,SAASC,IAAIC,OAAOd,eAAemE,eAE7CH,OAAOI,SACPJ,OAAS,KACT7B,OAAOvB,SAAW,MAGjBoD,cACKpE,uBAAuByE,WAnFhC,eAmFqDjE,KAC7CkE,OAAMnE,UACHL,aAAa6C,cAAc5C,IAAIiD,UAAU,sBAAuB,sBAAuB,YAI3E,oBAAbpC,UAAyC,OAAbA,SAKnCA,SAASC,IAAIC,OAAOd,eACpBE,iBAEAU,SAASC,IAAI0D,WACT,CACIC,QAASxE,cACTyE,OAAQ,YACUtE,iBACVD,6BAEU,WACVwE,QAAQC,IAAI,6BAf5B1E,aAAauC,gBAAgB"}